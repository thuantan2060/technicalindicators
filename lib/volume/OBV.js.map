{"version":3,"file":"OBV.js","names":["_indicator","require","OBVInput","IndicatorInput","close","volume","exports","OBV","Indicator","generator","constructor","input","closes","volumes","result","tick","lastClose","next","forEach","index","tickInput","value","undefined","push","calculate","obv","nextValue","price","reverseInputs","reversedInput","reverse"],"sources":["../../src/volume/OBV.ts"],"sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\r\nimport { CandleData } from '../StockData';\r\n/**\r\n * Created by AAravindan on 5/17/16.\r\n */\r\n\"use strict\"\r\nexport class OBVInput extends IndicatorInput {\r\n  close:number[];\r\n  volume:number[];\r\n}\r\n\r\nexport class OBV extends Indicator {\r\n  generator:IterableIterator<number | undefined>;\r\n  constructor(input:OBVInput) {\r\n    super(input);\r\n    var closes      = input.close;\r\n    var volumes     = input.volume;\r\n\r\n    this.result = [];\r\n\r\n    this.generator = (function* (){\r\n      var result = 0;\r\n      var tick;\r\n      var lastClose;\r\n      tick = yield;\r\n      if(tick.close && (typeof tick.close === 'number')){\r\n        lastClose = tick.close;\r\n        tick = yield;\r\n      }\r\n      while (true)\r\n      {\r\n        if(lastClose < tick.close ){\r\n          result = result + tick.volume;\r\n        }\r\n        else if(tick.close < lastClose){\r\n          result = result - tick.volume;\r\n        }\r\n        lastClose = tick.close;\r\n        tick = yield result;\r\n      }\r\n    })();\r\n\r\n    this.generator.next();\r\n\r\n    closes.forEach((close, index) => {\r\n      let tickInput = {\r\n        close   : closes[index],\r\n        volume  : volumes[index]\r\n      }\r\n      let result = this.generator.next(tickInput);\r\n      if(result.value != undefined){\r\n        this.result.push(result.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  static calculate = obv;\r\n\r\n  nextValue(price:CandleData):number | undefined {\r\n     return this.generator.next(price).value;\r\n  };\r\n\r\n}\r\n\r\nexport function obv(input:OBVInput):number[] {\r\n      Indicator.reverseInputs(input);\r\n      var result = new OBV(input).result;\r\n      if(input.reversedInput) {\r\n          result.reverse();\r\n      }\r\n      Indicator.reverseInputs(input);\r\n      return result;\r\n  };"],"mappings":";;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA,YAAY;AACL,MAAMC,QAAQ,SAASC,yBAAc,CAAC;EAC3CC,KAAK;EACLC,MAAM;AACR;AAACC,OAAA,CAAAJ,QAAA,GAAAA,QAAA;AAEM,MAAMK,GAAG,SAASC,oBAAS,CAAC;EACjCC,SAAS;EACTC,WAAWA,CAACC,KAAc,EAAE;IAC1B,KAAK,CAACA,KAAK,CAAC;IACZ,IAAIC,MAAM,GAAQD,KAAK,CAACP,KAAK;IAC7B,IAAIS,OAAO,GAAOF,KAAK,CAACN,MAAM;IAE9B,IAAI,CAACS,MAAM,GAAG,EAAE;IAEhB,IAAI,CAACL,SAAS,GAAI,aAAY;MAC5B,IAAIK,MAAM,GAAG,CAAC;MACd,IAAIC,IAAI;MACR,IAAIC,SAAS;MACbD,IAAI,GAAG,KAAK;MACZ,IAAGA,IAAI,CAACX,KAAK,IAAK,OAAOW,IAAI,CAACX,KAAK,KAAK,QAAS,EAAC;QAChDY,SAAS,GAAGD,IAAI,CAACX,KAAK;QACtBW,IAAI,GAAG,KAAK;MACd;MACA,OAAO,IAAI,EACX;QACE,IAAGC,SAAS,GAAGD,IAAI,CAACX,KAAK,EAAE;UACzBU,MAAM,GAAGA,MAAM,GAAGC,IAAI,CAACV,MAAM;QAC/B,CAAC,MACI,IAAGU,IAAI,CAACX,KAAK,GAAGY,SAAS,EAAC;UAC7BF,MAAM,GAAGA,MAAM,GAAGC,IAAI,CAACV,MAAM;QAC/B;QACAW,SAAS,GAAGD,IAAI,CAACX,KAAK;QACtBW,IAAI,GAAG,MAAMD,MAAM;MACrB;IACF,CAAC,CAAE,CAAC;IAEJ,IAAI,CAACL,SAAS,CAACQ,IAAI,CAAC,CAAC;IAErBL,MAAM,CAACM,OAAO,CAAC,CAACd,KAAK,EAAEe,KAAK,KAAK;MAC/B,IAAIC,SAAS,GAAG;QACdhB,KAAK,EAAKQ,MAAM,CAACO,KAAK,CAAC;QACvBd,MAAM,EAAIQ,OAAO,CAACM,KAAK;MACzB,CAAC;MACD,IAAIL,MAAM,GAAG,IAAI,CAACL,SAAS,CAACQ,IAAI,CAACG,SAAS,CAAC;MAC3C,IAAGN,MAAM,CAACO,KAAK,IAAIC,SAAS,EAAC;QAC3B,IAAI,CAACR,MAAM,CAACS,IAAI,CAACT,MAAM,CAACO,KAAK,CAAC;MAChC;IACF,CAAC,CAAC;EACJ;EAEA,OAAOG,SAAS,GAAGC,GAAG;EAEtBC,SAASA,CAACC,KAAgB,EAAqB;IAC5C,OAAO,IAAI,CAAClB,SAAS,CAACQ,IAAI,CAACU,KAAK,CAAC,CAACN,KAAK;EAC1C;AAEF;AAACf,OAAA,CAAAC,GAAA,GAAAA,GAAA;AAEM,SAASkB,GAAGA,CAACd,KAAc,EAAW;EACvCH,oBAAS,CAACoB,aAAa,CAACjB,KAAK,CAAC;EAC9B,IAAIG,MAAM,GAAG,IAAIP,GAAG,CAACI,KAAK,CAAC,CAACG,MAAM;EAClC,IAAGH,KAAK,CAACkB,aAAa,EAAE;IACpBf,MAAM,CAACgB,OAAO,CAAC,CAAC;EACpB;EACAtB,oBAAS,CAACoB,aAAa,CAACjB,KAAK,CAAC;EAC9B,OAAOG,MAAM;AACjB;AAAC","ignoreList":[]}