{"version":3,"file":"MFI.js","names":["_indicator","require","_TypicalPrice","_FixedSizeLinkedList","_interopRequireDefault","MFIInput","IndicatorInput","high","low","close","volume","period","exports","MFI","Indicator","generator","constructor","input","highs","lows","closes","volumes","typicalPrice","TypicalPrice","positiveFlow","FixedSizeLinkedList","negativeFlow","length","result","tick","lastClose","positiveFlowForPeriod","rawMoneyFlow","moneyFlowRatio","negativeFlowForPeriod","typicalPriceValue","prevousTypicalPrice","positionMoney","negativeMoney","nextValue","push","periodSum","totalPushed","next","forEach","tickHigh","index","tickInput","value","undefined","parseFloat","toFixed","calculate","mfi","price","reverseInputs","reversedInput","reverse"],"sources":["../../src/volume/MFI.ts"],"sourcesContent":["/**\r\n * Created by AAravindan on 5/17/16.\r\n */\r\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\r\nimport { CandleData } from '../StockData';\r\nimport { TypicalPrice } from '../chart_types/TypicalPrice';\r\nimport FixedSizeLinkedList from '../Utils/FixedSizeLinkedList';\r\n\r\nexport class MFIInput extends IndicatorInput {\r\n  high:number[]\r\n  low:number[]\r\n  close:number[]\r\n  volume:number[]\r\n  period :number\r\n}\r\n\r\nexport class MFI extends Indicator {\r\n  generator:IterableIterator<number | undefined>;\r\n    constructor (input:MFIInput) {\r\n      super(input);\r\n      var highs       = input.high;\r\n      var lows        = input.low;\r\n      var closes      = input.close;\r\n      var volumes     = input.volume;\r\n      var period      = input.period;\r\n\r\n      var typicalPrice =  new TypicalPrice({ low : [], high: [], close: []});\r\n\r\n      var positiveFlow = new FixedSizeLinkedList(period, false, false, true);\r\n      var negativeFlow = new FixedSizeLinkedList(period, false, false, true);\r\n\r\n      if(!((lows.length === highs.length) && (highs.length === closes.length) && (highs.length === volumes.length) )){\r\n        throw ('Inputs(low,high, close, volumes) not of equal size');\r\n      }\r\n\r\n      this.result = [];\r\n\r\n      this.generator = (function* (){\r\n        var result;\r\n        var tick;\r\n        var lastClose;\r\n        var positiveFlowForPeriod;\r\n        var rawMoneyFlow = 0;\r\n        var moneyFlowRatio;\r\n        var negativeFlowForPeriod;\r\n        let typicalPriceValue = null;\r\n        let prevousTypicalPrice = null;\r\n        tick = yield;\r\n        lastClose = tick.close; //Fist value \r\n        tick = yield;\r\n        while (true)\r\n        {\r\n          var { high, low, close, volume } = tick;\r\n          var positionMoney = 0;\r\n          var negativeMoney = 0;\r\n          typicalPriceValue = typicalPrice.nextValue({ high, low, close});\r\n          rawMoneyFlow = typicalPriceValue * volume;\r\n          if((typicalPriceValue != null) && (prevousTypicalPrice != null)) {\r\n            typicalPriceValue > prevousTypicalPrice ? positionMoney=rawMoneyFlow : negativeMoney = rawMoneyFlow;\r\n            positiveFlow.push(positionMoney)\r\n            negativeFlow.push(negativeMoney)\r\n            positiveFlowForPeriod = positiveFlow.periodSum;\r\n            negativeFlowForPeriod = negativeFlow.periodSum;\r\n            if((positiveFlow.totalPushed >= period) && (positiveFlow.totalPushed >= period)) {\r\n                moneyFlowRatio = positiveFlowForPeriod / negativeFlowForPeriod;\r\n                result = 100 - 100 / ( 1 + moneyFlowRatio);\r\n            }\r\n          }\r\n          prevousTypicalPrice = typicalPriceValue;\r\n          tick = yield result\r\n        }\r\n      })();\r\n\r\n      this.generator.next();\r\n\r\n      highs.forEach((tickHigh, index) => {\r\n        var tickInput = {\r\n          high    : tickHigh,\r\n          low     : lows[index],\r\n          close   : closes[index],\r\n          volume  : volumes[index]\r\n        }\r\n        var result = this.generator.next(tickInput);\r\n        if(result.value != undefined){\r\n          this.result.push(parseFloat(result.value.toFixed(2)));\r\n        }\r\n      });\r\n  };\r\n\r\n  static calculate = mfi;\r\n\r\n  nextValue(price:CandleData):number | undefined {\r\n     var result =  this.generator.next(price);\r\n     if(result.value != undefined){\r\n        return (parseFloat(result.value.toFixed(2)));\r\n      }\r\n  };\r\n}\r\n\r\nexport function mfi(input:MFIInput):number[] {\r\n      Indicator.reverseInputs(input);\r\n      var result = new MFI(input).result;\r\n      if(input.reversedInput) {\r\n          result.reverse();\r\n      }\r\n      Indicator.reverseInputs(input);\r\n      return result;\r\n  };"],"mappings":"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","ignoreList":[]}