{"version":3,"file":"WilliamsR.js","names":["_indicator","require","_FixedSizeLinkedList","_interopRequireDefault","WilliamsRInput","IndicatorInput","low","high","close","period","exports","WilliamsR","Indicator","result","generator","constructor","input","lows","highs","closes","format","length","index","pastHighPeriods","LinkedList","pastLowPeriods","periodLow","periodHigh","tick","williamsR","push","next","forEach","value","undefined","calculate","williamsr","nextValue","price","nextResult","reverseInputs","reversedInput","reverse"],"sources":["../../src/momentum/WilliamsR.ts"],"sourcesContent":["import { IndicatorInput, Indicator } from '../indicator/indicator';\r\n\r\nimport LinkedList from '../Utils/FixedSizeLinkedList';\r\n\r\nexport class WilliamsRInput extends IndicatorInput {\r\n  low:number[];\r\n  high:number[];\r\n  close:number[];\r\n  period:number;\r\n};\r\n\r\nexport class WilliamsR extends Indicator {\r\n  result : number[];\r\n  generator:IterableIterator<number | undefined>;\r\n  constructor(input:WilliamsRInput) {\r\n    super(input);\r\n    let lows = input.low;\r\n    let highs = input.high;\r\n    let closes = input.close;\r\n    let period = input.period;\r\n    let format = this.format;\r\n\r\n    if(!((lows.length === highs.length) && (highs.length === closes.length) )){\r\n      throw ('Inputs(low,high, close) not of equal size');\r\n    }\r\n    this.result = [];\r\n\r\n    //%R = (Highest High - Close)/(Highest High - Lowest Low) * -100\r\n    //Lowest Low = lowest low for the look-back period\r\n    //Highest High = highest high for the look-back period\r\n    //%R is multiplied by -100 correct the inversion and move the decimal.\r\n    this.generator = (function* ():IterableIterator<number | undefined>{\r\n      let index = 1;\r\n      let pastHighPeriods = new LinkedList(period, true, false);\r\n      let pastLowPeriods = new LinkedList(period, false, true);\r\n      let periodLow;\r\n      let periodHigh;\r\n      var tick = yield;\r\n      let williamsR;\r\n      while (true) {\r\n        pastHighPeriods.push(tick.high);\r\n        pastLowPeriods.push(tick.low);\r\n        if(index < period){\r\n          index++;\r\n          tick = yield;\r\n          continue;\r\n        }\r\n        periodLow = pastLowPeriods.periodLow;\r\n        periodHigh= pastHighPeriods.periodHigh;\r\n        williamsR = format((periodHigh - tick.close) / (periodHigh- periodLow) * -100);\r\n        tick = yield williamsR;\r\n      }\r\n    })();\r\n\r\n    this.generator.next();\r\n\r\n    lows.forEach((low, index) => {\r\n      var result = this.generator.next({\r\n        high : highs[index],\r\n        low  : lows[index],\r\n        close : closes[index]\r\n      });\r\n      if(result.value !== undefined){\r\n        this.result.push(result.value);\r\n      }\r\n    });\r\n  };\r\n\r\n  static calculate = williamsr;\r\n\r\n  nextValue(price:number):number | undefined {\r\n      var nextResult = this.generator.next(price);\r\n      if(nextResult.value != undefined)\r\n        return this.format(nextResult.value);\r\n  };\r\n}\r\n\r\nexport function williamsr(input:WilliamsRInput):number[] {\r\n      Indicator.reverseInputs(input);\r\n      var result = new WilliamsR(input).result;\r\n      if(input.reversedInput) {\r\n          result.reverse();\r\n      }\r\n      Indicator.reverseInputs(input);\r\n      return result;\r\n  };"],"mappings":";;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEA,IAAAC,oBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEO,MAAMG,cAAc,SAASC,yBAAc,CAAC;EACjDC,GAAG;EACHC,IAAI;EACJC,KAAK;EACLC,MAAM;AACR;AAACC,OAAA,CAAAN,cAAA,GAAAA,cAAA;AAAA;AAEM,MAAMO,SAAS,SAASC,oBAAS,CAAC;EACvCC,MAAM;EACNC,SAAS;EACTC,WAAWA,CAACC,KAAoB,EAAE;IAChC,KAAK,CAACA,KAAK,CAAC;IACZ,IAAIC,IAAI,GAAGD,KAAK,CAACV,GAAG;IACpB,IAAIY,KAAK,GAAGF,KAAK,CAACT,IAAI;IACtB,IAAIY,MAAM,GAAGH,KAAK,CAACR,KAAK;IACxB,IAAIC,MAAM,GAAGO,KAAK,CAACP,MAAM;IACzB,IAAIW,MAAM,GAAG,IAAI,CAACA,MAAM;IAExB,IAAG,EAAGH,IAAI,CAACI,MAAM,KAAKH,KAAK,CAACG,MAAM,IAAMH,KAAK,CAACG,MAAM,KAAKF,MAAM,CAACE,MAAO,CAAE,EAAC;MACxE,MAAO,2CAA2C;IACpD;IACA,IAAI,CAACR,MAAM,GAAG,EAAE;;IAEhB;IACA;IACA;IACA;IACA,IAAI,CAACC,SAAS,GAAI,aAAiD;MACjE,IAAIQ,KAAK,GAAG,CAAC;MACb,IAAIC,eAAe,GAAG,IAAIC,4BAAU,CAACf,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;MACzD,IAAIgB,cAAc,GAAG,IAAID,4BAAU,CAACf,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;MACxD,IAAIiB,SAAS;MACb,IAAIC,UAAU;MACd,IAAIC,IAAI,GAAG,KAAK;MAChB,IAAIC,SAAS;MACb,OAAO,IAAI,EAAE;QACXN,eAAe,CAACO,IAAI,CAACF,IAAI,CAACrB,IAAI,CAAC;QAC/BkB,cAAc,CAACK,IAAI,CAACF,IAAI,CAACtB,GAAG,CAAC;QAC7B,IAAGgB,KAAK,GAAGb,MAAM,EAAC;UAChBa,KAAK,EAAE;UACPM,IAAI,GAAG,KAAK;UACZ;QACF;QACAF,SAAS,GAAGD,cAAc,CAACC,SAAS;QACpCC,UAAU,GAAEJ,eAAe,CAACI,UAAU;QACtCE,SAAS,GAAGT,MAAM,CAAC,CAACO,UAAU,GAAGC,IAAI,CAACpB,KAAK,KAAKmB,UAAU,GAAED,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;QAC9EE,IAAI,GAAG,MAAMC,SAAS;MACxB;IACF,CAAC,CAAE,CAAC;IAEJ,IAAI,CAACf,SAAS,CAACiB,IAAI,CAAC,CAAC;IAErBd,IAAI,CAACe,OAAO,CAAC,CAAC1B,GAAG,EAAEgB,KAAK,KAAK;MAC3B,IAAIT,MAAM,GAAG,IAAI,CAACC,SAAS,CAACiB,IAAI,CAAC;QAC/BxB,IAAI,EAAGW,KAAK,CAACI,KAAK,CAAC;QACnBhB,GAAG,EAAIW,IAAI,CAACK,KAAK,CAAC;QAClBd,KAAK,EAAGW,MAAM,CAACG,KAAK;MACtB,CAAC,CAAC;MACF,IAAGT,MAAM,CAACoB,KAAK,KAAKC,SAAS,EAAC;QAC5B,IAAI,CAACrB,MAAM,CAACiB,IAAI,CAACjB,MAAM,CAACoB,KAAK,CAAC;MAChC;IACF,CAAC,CAAC;EACJ;EAEA,OAAOE,SAAS,GAAGC,SAAS;EAE5BC,SAASA,CAACC,KAAY,EAAqB;IACvC,IAAIC,UAAU,GAAG,IAAI,CAACzB,SAAS,CAACiB,IAAI,CAACO,KAAK,CAAC;IAC3C,IAAGC,UAAU,CAACN,KAAK,IAAIC,SAAS,EAC9B,OAAO,IAAI,CAACd,MAAM,CAACmB,UAAU,CAACN,KAAK,CAAC;EAC1C;AACF;AAACvB,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAEM,SAASyB,SAASA,CAACpB,KAAoB,EAAW;EACnDJ,oBAAS,CAAC4B,aAAa,CAACxB,KAAK,CAAC;EAC9B,IAAIH,MAAM,GAAG,IAAIF,SAAS,CAACK,KAAK,CAAC,CAACH,MAAM;EACxC,IAAGG,KAAK,CAACyB,aAAa,EAAE;IACpB5B,MAAM,CAAC6B,OAAO,CAAC,CAAC;EACpB;EACA9B,oBAAS,CAAC4B,aAAa,CAACxB,KAAK,CAAC;EAC9B,OAAOH,MAAM;AACjB;AAAC","ignoreList":[]}