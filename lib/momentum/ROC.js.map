{"version":3,"file":"ROC.js","names":["_indicator","require","_FixedSizeLinkedList","_interopRequireDefault","ROCInput","IndicatorInput","period","values","exports","ROC","Indicator","result","generator","constructor","input","priceArray","index","pastPeriods","LinkedList","tick","roc","push","lastShift","next","forEach","value","undefined","isNaN","format","calculate","nextValue","price","nextResult","reverseInputs","reversedInput","reverse"],"sources":["../../src/momentum/ROC.ts"],"sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\r\nimport LinkedList from '../Utils/FixedSizeLinkedList';\r\n\r\n\r\nexport class ROCInput extends IndicatorInput {\r\n  period : number;\r\n  values : number[];\r\n} \r\n\r\nexport class ROC extends Indicator {\r\n  result : number[];\r\n  generator:IterableIterator<number | undefined>;\r\n  constructor(input:ROCInput) {\r\n      super(input);\r\n      var period = input.period\r\n      var priceArray = input.values;\r\n      this.result = [];\r\n      this.generator = (function* (){\r\n        let index = 1;\r\n        var pastPeriods = new LinkedList(period);;\r\n        var tick = yield;\r\n        var roc;\r\n        while (true) {\r\n          pastPeriods.push(tick)\r\n          if(index < period){\r\n            index++;\r\n          }else {\r\n            roc = ((tick - pastPeriods.lastShift) / (pastPeriods.lastShift)) * 100\r\n          }\r\n          tick = yield roc;\r\n        }\r\n      })();\r\n\r\n      this.generator.next();\r\n\r\n      priceArray.forEach((tick) => {\r\n        var result = this.generator.next(tick);\r\n        if(result.value != undefined && (!isNaN(result.value))){\r\n          this.result.push(this.format(result.value));\r\n        }\r\n      });\r\n  }\r\n\r\n   static calculate = roc;\r\n\r\n    nextValue(price:number):number | undefined {\r\n        var nextResult = this.generator.next(price);\r\n        if(nextResult.value != undefined && (!isNaN(nextResult.value))) {\r\n          return this.format(nextResult.value);\r\n        }\r\n    };\r\n\r\n};\r\n\r\n\r\nexport function roc(input:ROCInput):number[] {\r\n       Indicator.reverseInputs(input);\r\n        var result = new ROC(input).result;\r\n        if(input.reversedInput) {\r\n            result.reverse();\r\n        }\r\n        Indicator.reverseInputs(input);\r\n        return result;\r\n    };"],"mappings":";;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,oBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAGO,MAAMG,QAAQ,SAASC,yBAAc,CAAC;EAC3CC,MAAM;EACNC,MAAM;AACR;AAACC,OAAA,CAAAJ,QAAA,GAAAA,QAAA;AAEM,MAAMK,GAAG,SAASC,oBAAS,CAAC;EACjCC,MAAM;EACNC,SAAS;EACTC,WAAWA,CAACC,KAAc,EAAE;IACxB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAIR,MAAM,GAAGQ,KAAK,CAACR,MAAM;IACzB,IAAIS,UAAU,GAAGD,KAAK,CAACP,MAAM;IAC7B,IAAI,CAACI,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,SAAS,GAAI,aAAY;MAC5B,IAAII,KAAK,GAAG,CAAC;MACb,IAAIC,WAAW,GAAG,IAAIC,4BAAU,CAACZ,MAAM,CAAC;MAAC;MACzC,IAAIa,IAAI,GAAG,KAAK;MAChB,IAAIC,GAAG;MACP,OAAO,IAAI,EAAE;QACXH,WAAW,CAACI,IAAI,CAACF,IAAI,CAAC;QACtB,IAAGH,KAAK,GAAGV,MAAM,EAAC;UAChBU,KAAK,EAAE;QACT,CAAC,MAAK;UACJI,GAAG,GAAI,CAACD,IAAI,GAAGF,WAAW,CAACK,SAAS,IAAKL,WAAW,CAACK,SAAU,GAAI,GAAG;QACxE;QACAH,IAAI,GAAG,MAAMC,GAAG;MAClB;IACF,CAAC,CAAE,CAAC;IAEJ,IAAI,CAACR,SAAS,CAACW,IAAI,CAAC,CAAC;IAErBR,UAAU,CAACS,OAAO,CAAEL,IAAI,IAAK;MAC3B,IAAIR,MAAM,GAAG,IAAI,CAACC,SAAS,CAACW,IAAI,CAACJ,IAAI,CAAC;MACtC,IAAGR,MAAM,CAACc,KAAK,IAAIC,SAAS,IAAK,CAACC,KAAK,CAAChB,MAAM,CAACc,KAAK,CAAE,EAAC;QACrD,IAAI,CAACd,MAAM,CAACU,IAAI,CAAC,IAAI,CAACO,MAAM,CAACjB,MAAM,CAACc,KAAK,CAAC,CAAC;MAC7C;IACF,CAAC,CAAC;EACN;EAEC,OAAOI,SAAS,GAAGT,GAAG;EAErBU,SAASA,CAACC,KAAY,EAAqB;IACvC,IAAIC,UAAU,GAAG,IAAI,CAACpB,SAAS,CAACW,IAAI,CAACQ,KAAK,CAAC;IAC3C,IAAGC,UAAU,CAACP,KAAK,IAAIC,SAAS,IAAK,CAACC,KAAK,CAACK,UAAU,CAACP,KAAK,CAAE,EAAE;MAC9D,OAAO,IAAI,CAACG,MAAM,CAACI,UAAU,CAACP,KAAK,CAAC;IACtC;EACJ;AAEJ;AAACjB,OAAA,CAAAC,GAAA,GAAAA,GAAA;AAAA;AAGM,SAASW,GAAGA,CAACN,KAAc,EAAW;EACtCJ,oBAAS,CAACuB,aAAa,CAACnB,KAAK,CAAC;EAC7B,IAAIH,MAAM,GAAG,IAAIF,GAAG,CAACK,KAAK,CAAC,CAACH,MAAM;EAClC,IAAGG,KAAK,CAACoB,aAAa,EAAE;IACpBvB,MAAM,CAACwB,OAAO,CAAC,CAAC;EACpB;EACAzB,oBAAS,CAACuB,aAAa,CAACnB,KAAK,CAAC;EAC9B,OAAOH,MAAM;AACjB;AAAC","ignoreList":[]}