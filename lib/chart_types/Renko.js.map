{"version":3,"file":"Renko.js","names":["_StockData","require","_ATR","_indicator","RenkoInput","IndicatorInput","period","brickSize","useATR","low","open","volume","high","close","timestamp","exports","Renko","Indicator","result","generator","constructor","input","format","atrResult","atr","Object","assign","length","CandleList","console","error","lastOpen","lastHigh","lastLow","Infinity","lastClose","lastVolume","lastTimestamp","candleData","absoluteMovementFromClose","Math","abs","absoluteMovementFromOpen","reference","calculated","Low","next","forEach","tick","index","value","push","calculate","renko","nextValue","price","reverseInputs","reversedInput","reverse"],"sources":["../../src/chart_types/Renko.ts"],"sourcesContent":["import { CandleData, CandleList } from '../StockData';\r\nimport { atr } from '../directionalmovement/ATR';\r\n\r\n/**\r\n * Created by AAravindan on 5/4/16.\r\n */\r\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\r\n\r\nexport class RenkoInput extends IndicatorInput {\r\n    period? :number;\r\n    brickSize? : number\r\n    useATR?: boolean\r\n    low? : number[]\r\n    open? : number[]\r\n    volume? : number[]\r\n    high? : number[]\r\n    close? : number[]\r\n    timestamp? : number[]\r\n}\r\n\r\nclass Renko extends Indicator{\r\n    result : CandleList;\r\n    generator:IterableIterator<CandleData | undefined>;\r\n    constructor(input:RenkoInput) {\r\n      super(input);\r\n      var format = this.format;\r\n      let useATR = input.useATR;\r\n      let brickSize = input.brickSize || 0;\r\n      if(useATR) {\r\n       let atrResult = atr((<any>Object).assign({}, input));\r\n       brickSize = atrResult[atrResult.length - 1];\r\n      }\r\n      this.result = new CandleList();;\r\n      if(brickSize === 0) {\r\n          console.error('Not enough data to calculate brickSize for renko when using ATR');\r\n          return;\r\n      }\r\n      let lastOpen = 0;\r\n      let lastHigh = 0;\r\n      let lastLow = Infinity;\r\n      let lastClose = 0;\r\n      let lastVolume = 0;\r\n      let lastTimestamp = 0;\r\n      this.generator = (function* (){\r\n          let candleData = yield;\r\n          while (true) {\r\n            //Calculating first bar\r\n            if(lastOpen === 0) {\r\n                lastOpen = candleData.close;\r\n                lastHigh = candleData.high;\r\n                lastLow = candleData.low;\r\n                lastClose = candleData.close;\r\n                lastVolume = candleData.volume;\r\n                lastTimestamp = candleData.timestamp;\r\n                candleData = yield;\r\n                continue;\r\n            }\r\n            let absoluteMovementFromClose = Math.abs(candleData.close - lastClose);\r\n            let absoluteMovementFromOpen = Math.abs(candleData.close - lastOpen);\r\n\r\n            if((absoluteMovementFromClose >= brickSize) && (absoluteMovementFromOpen >= brickSize)) {\r\n                let reference = absoluteMovementFromClose > absoluteMovementFromOpen ? lastOpen : lastClose\r\n                let calculated = <any>{\r\n                    open : reference,\r\n                    high : lastHigh > candleData.high ? lastHigh : candleData.high,\r\n                    low : lastLow < candleData.Low ? lastLow : candleData.low,\r\n                    close : reference > candleData.close ? (reference - brickSize) : (reference + brickSize),\r\n                    volume : lastVolume + candleData.volume,\r\n                    timestamp : candleData.timestamp\r\n                };\r\n                lastOpen = calculated.open;\r\n                lastHigh = calculated.close;\r\n                lastLow = calculated.close;\r\n                lastClose = calculated.close;\r\n                lastVolume = 0;\r\n                candleData = yield calculated\r\n            } else {\r\n                lastHigh = lastHigh > candleData.high ? lastHigh : candleData.high;\r\n                lastLow = lastLow < candleData.Low ? lastLow : candleData.low;\r\n                lastVolume = lastVolume + candleData.volume;\r\n                lastTimestamp = candleData.timestamp;\r\n                candleData = yield;\r\n            }\r\n          }\r\n      })();\r\n\r\n      this.generator.next();\r\n      input.low.forEach((tick, index) => {\r\n            var result = this.generator.next({ \r\n                open : input.open[index],\r\n                high : input.high[index],\r\n                low : input.low[index],\r\n                close : input.close[index],\r\n                volume : input.volume[index],\r\n                timestamp : input.timestamp[index]\r\n            });\r\n            if(result.value){\r\n                this.result.open.push(result.value.open)\r\n                this.result.high.push(result.value.high)\r\n                this.result.low.push(result.value.low)\r\n                this.result.close.push(result.value.close)\r\n                this.result.volume.push(result.value.volume)\r\n                this.result.timestamp.push(result.value.timestamp)\r\n            }\r\n      });\r\n    }\r\n\r\n    static calculate=renko;\r\n\r\n    nextValue(price:number):CandleList | undefined {\r\n        console.error('Cannot calculate next value on Renko, Every value has to be recomputed for every change, use calcualte method');\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function renko(input:RenkoInput):CandleList {\r\n       Indicator.reverseInputs(input);\r\n        var result = new Renko(input).result;\r\n        if(input.reversedInput) {\r\n            result.open.reverse();\r\n            result.high.reverse();\r\n            result.low.reverse();\r\n            result.close.reverse();\r\n            result.volume.reverse();\r\n            result.timestamp.reverse();\r\n        }\r\n        Indicator.reverseInputs(input);\r\n        return result;\r\n    };"],"mappings":"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","ignoreList":[]}