{"version":3,"file":"TypicalPrice.js","names":["_indicator","require","TypicalPriceInput","IndicatorInput","low","high","close","exports","TypicalPrice","Indicator","result","generator","constructor","input","priceInput","next","forEach","tick","index","push","value","calculate","typicalprice","nextValue","price","reverseInputs","reversedInput","reverse"],"sources":["../../src/chart_types/TypicalPrice.ts"],"sourcesContent":["import { CandleData, CandleList } from '../StockData';\r\nimport { atr } from '../directionalmovement/ATR';\r\n\r\n/**\r\n * Created by AAravindan on 5/4/16.\r\n */\r\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\r\n\r\nexport class TypicalPriceInput extends IndicatorInput {\r\n    low? : number[]\r\n    high? : number[]\r\n    close? : number[]\r\n}\r\n\r\nexport class TypicalPrice extends Indicator{\r\n    result : number[] = [];\r\n    generator:IterableIterator<number | undefined>;\r\n    constructor(input:TypicalPriceInput) {\r\n      super(input);\r\n      this.generator = (function* (){\r\n          let priceInput = yield;\r\n          while (true) {\r\n            priceInput = yield (priceInput.high + priceInput.low + priceInput.close) / 3;\r\n          }\r\n      })();\r\n\r\n      this.generator.next();\r\n      input.low.forEach((tick, index) => {\r\n            var result = this.generator.next({ \r\n                high : input.high[index],\r\n                low : input.low[index],\r\n                close : input.close[index],\r\n            });\r\n            this.result.push(result.value);\r\n      });\r\n    }\r\n\r\n    static calculate=typicalprice;\r\n\r\n    nextValue(price:CandleData):number | undefined {\r\n        var result = this.generator.next(price).value;\r\n        return result;\r\n    };\r\n}\r\n\r\nexport function typicalprice(input:TypicalPriceInput):number[] {\r\n    Indicator.reverseInputs(input);\r\n    var result = new TypicalPrice(input).result;\r\n    if(input.reversedInput) {\r\n        result.reverse();\r\n    }\r\n    Indicator.reverseInputs(input);\r\n    return result;\r\n};"],"mappings":";;;;;;;AAMA,IAAAA,UAAA,GAAAC,OAAA;AAHA;AACA;AACA;;AAGO,MAAMC,iBAAiB,SAASC,yBAAc,CAAC;EAClDC,GAAG;EACHC,IAAI;EACJC,KAAK;AACT;AAACC,OAAA,CAAAL,iBAAA,GAAAA,iBAAA;AAEM,MAAMM,YAAY,SAASC,oBAAS;EACvCC,MAAM,GAAc,EAAE;EACtBC,SAAS;EACTC,WAAWA,CAACC,KAAuB,EAAE;IACnC,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACF,SAAS,GAAI,aAAY;MAC1B,IAAIG,UAAU,GAAG,KAAK;MACtB,OAAO,IAAI,EAAE;QACXA,UAAU,GAAG,MAAM,CAACA,UAAU,CAACT,IAAI,GAAGS,UAAU,CAACV,GAAG,GAAGU,UAAU,CAACR,KAAK,IAAI,CAAC;MAC9E;IACJ,CAAC,CAAE,CAAC;IAEJ,IAAI,CAACK,SAAS,CAACI,IAAI,CAAC,CAAC;IACrBF,KAAK,CAACT,GAAG,CAACY,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC7B,IAAIR,MAAM,GAAG,IAAI,CAACC,SAAS,CAACI,IAAI,CAAC;QAC7BV,IAAI,EAAGQ,KAAK,CAACR,IAAI,CAACa,KAAK,CAAC;QACxBd,GAAG,EAAGS,KAAK,CAACT,GAAG,CAACc,KAAK,CAAC;QACtBZ,KAAK,EAAGO,KAAK,CAACP,KAAK,CAACY,KAAK;MAC7B,CAAC,CAAC;MACF,IAAI,CAACR,MAAM,CAACS,IAAI,CAACT,MAAM,CAACU,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ;EAEA,OAAOC,SAAS,GAACC,YAAY;EAE7BC,SAASA,CAACC,KAAgB,EAAqB;IAC3C,IAAId,MAAM,GAAG,IAAI,CAACC,SAAS,CAACI,IAAI,CAACS,KAAK,CAAC,CAACJ,KAAK;IAC7C,OAAOV,MAAM;EACjB;AACJ;AAACH,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAEM,SAASc,YAAYA,CAACT,KAAuB,EAAW;EAC3DJ,oBAAS,CAACgB,aAAa,CAACZ,KAAK,CAAC;EAC9B,IAAIH,MAAM,GAAG,IAAIF,YAAY,CAACK,KAAK,CAAC,CAACH,MAAM;EAC3C,IAAGG,KAAK,CAACa,aAAa,EAAE;IACpBhB,MAAM,CAACiB,OAAO,CAAC,CAAC;EACpB;EACAlB,oBAAS,CAACgB,aAAa,CAACZ,KAAK,CAAC;EAC9B,OAAOH,MAAM;AACjB;AAAC","ignoreList":[]}