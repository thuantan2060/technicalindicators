{"version":3,"file":"DownsideTasukiGap.js","names":["_CandlestickFinder","_interopRequireDefault","require","DownsideTasukiGap","CandlestickFinder","constructor","scale","requiredCount","name","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","thirddaysOpen","thirddaysClose","thirddaysHigh","thirddaysLow","isFirstBearish","isSecondBearish","isThirdBullish","isFirstGapExists","isDownsideTasukiGap","exports","default","downsidetasukigap","hasPattern"],"sources":["../../src/candlestick/DownsideTasukiGap.ts"],"sourcesContent":["import StockData from '../StockData';\r\nimport CandlestickFinder from './CandlestickFinder';\r\n\r\nexport default class DownsideTasukiGap extends CandlestickFinder {\r\n    constructor(scale: number = 1) {\r\n        super();\r\n        this.requiredCount  = 3;\r\n        this.name = 'DownsideTasukiGap';\r\n        this.scale = scale;\r\n    }\r\n    logic (data:StockData) {\r\n        let firstdaysOpen   = data.open[0];\r\n        let firstdaysClose  = data.close[0];\r\n        let firstdaysHigh   = data.high[0];\r\n        let firstdaysLow    = data.low[0]\r\n        let seconddaysOpen  = data.open[1];\r\n        let seconddaysClose = data.close[1];\r\n        let seconddaysHigh  = data.high[1];\r\n        let seconddaysLow   = data.low[1];\r\n        let thirddaysOpen   = data.open[2];\r\n        let thirddaysClose  = data.close[2];\r\n        let thirddaysHigh   = data.high[2];\r\n        let thirddaysLow    = data.low[2];\r\n        \r\n        let isFirstBearish       = firstdaysClose < firstdaysOpen;\r\n        let isSecondBearish      = seconddaysClose < seconddaysOpen;\r\n        let isThirdBullish       = thirddaysClose > thirddaysOpen;\r\n        let isFirstGapExists     = seconddaysHigh < firstdaysLow;\r\n        let isDownsideTasukiGap  = ((seconddaysOpen > thirddaysOpen) && \r\n                                   (seconddaysClose < thirddaysOpen) &&\r\n                                   (thirddaysClose > seconddaysOpen) &&\r\n                                   (thirddaysClose < firstdaysClose));              \r\n   \r\n        return (isFirstBearish && isSecondBearish && isThirdBullish && isFirstGapExists && isDownsideTasukiGap);\r\n        \r\n   }\r\n}\r\n\r\nexport function downsidetasukigap(data:StockData, scale: number = 1) {\r\n  return new DownsideTasukiGap(scale).hasPattern(data);\r\n}"],"mappings":";;;;;;;;AACA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEe,MAAMC,iBAAiB,SAASC,0BAAiB,CAAC;EAC7DC,WAAWA,CAACC,KAAa,GAAG,CAAC,EAAE;IAC3B,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,aAAa,GAAI,CAAC;IACvB,IAAI,CAACC,IAAI,GAAG,mBAAmB;IAC/B,IAAI,CAACF,KAAK,GAAGA,KAAK;EACtB;EACAG,KAAKA,CAAEC,IAAc,EAAE;IACnB,IAAIC,aAAa,GAAKD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIC,cAAc,GAAIH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIC,aAAa,GAAKL,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIC,YAAY,GAAMP,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAC;IACjC,IAAIC,cAAc,GAAIT,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIO,cAAc,GAAIX,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIM,aAAa,GAAKZ,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAC;IACjC,IAAIK,aAAa,GAAKb,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIY,cAAc,GAAId,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIW,aAAa,GAAKf,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIU,YAAY,GAAMhB,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAC;IAEjC,IAAIS,cAAc,GAASd,cAAc,GAAGF,aAAa;IACzD,IAAIiB,eAAe,GAAQR,eAAe,GAAGD,cAAc;IAC3D,IAAIU,cAAc,GAASL,cAAc,GAAGD,aAAa;IACzD,IAAIO,gBAAgB,GAAOT,cAAc,GAAGJ,YAAY;IACxD,IAAIc,mBAAmB,GAAMZ,cAAc,GAAGI,aAAa,IAC/BH,eAAe,GAAGG,aAAc,IAChCC,cAAc,GAAGL,cAAe,IAChCK,cAAc,GAAGX,cAAgB;IAE7D,OAAQc,cAAc,IAAIC,eAAe,IAAIC,cAAc,IAAIC,gBAAgB,IAAIC,mBAAmB;EAE3G;AACH;AAACC,OAAA,CAAAC,OAAA,GAAA9B,iBAAA;AAEM,SAAS+B,iBAAiBA,CAACxB,IAAc,EAAEJ,KAAa,GAAG,CAAC,EAAE;EACnE,OAAO,IAAIH,iBAAiB,CAACG,KAAK,CAAC,CAAC6B,UAAU,CAACzB,IAAI,CAAC;AACtD","ignoreList":[]}