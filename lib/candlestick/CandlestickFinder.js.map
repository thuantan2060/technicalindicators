{"version":3,"file":"CandlestickFinder.js","names":["CandlestickFinder","requiredCount","name","scale","constructor","approximateEqual","a","b","left","parseFloat","Math","abs","toPrecision","right","logic","data","getAllPatternIndex","close","length","console","warn","reversedInput","open","reverse","high","low","strategyFn","_generateDataForCandleStick","map","current","index","call","undefined","filter","hasIndex","hasPattern","_getLastDataForCandleStick","returnVal","i","push","generatedData","currentData","val","exports","default"],"sources":["../../src/candlestick/CandlestickFinder.ts"],"sourcesContent":["import StockData from '../StockData';\r\nexport default class CandlestickFinder {\r\n    requiredCount:number\r\n    name:string\r\n    scale:number\r\n\r\n    constructor() {\r\n        // if (new.target === Abstract) {\r\n        //     throw new TypeError(\"Abstract class\");\r\n        // }\r\n    }\r\n    approximateEqual(a:number, b:number):boolean {\r\n        let left = parseFloat(Math.abs(a - b).toPrecision(4)) * 1;\r\n        let right = parseFloat((a * 0.001 * this.scale).toPrecision(4)) * 1; \r\n        return  left <= right \r\n    }\r\n    \r\n    logic(data:StockData):boolean {\r\n        throw \"this has to be implemented\";        \r\n    }\r\n    getAllPatternIndex (data:StockData) {\r\n        if(data.close.length < this.requiredCount) {\r\n            console.warn('Data count less than data required for the strategy ', this.name);\r\n            return [];\r\n        }\r\n        if(data.reversedInput) {\r\n            data.open.reverse();\r\n            data.high.reverse();\r\n            data.low.reverse();\r\n            data.close.reverse();\r\n        }\r\n        let strategyFn = this.logic;\r\n        return this._generateDataForCandleStick(data)\r\n                .map((current, index) => {\r\n                            return strategyFn.call(this, current) ? index : undefined;\r\n                        }).filter((hasIndex) => {\r\n                            return hasIndex;\r\n                        });\r\n    }\r\n\r\n    hasPattern (data:StockData) {\r\n        if(data.close.length < this.requiredCount) {\r\n            console.warn('Data count less than data required for the strategy ', this.name);\r\n            return false;\r\n        }\r\n        if(data.reversedInput) {\r\n            data.open.reverse();\r\n            data.high.reverse();\r\n            data.low.reverse();\r\n            data.close.reverse();\r\n        }\r\n        let strategyFn = this.logic;\r\n        return strategyFn.call(this, this._getLastDataForCandleStick(data));\r\n    }\r\n\r\n    protected _getLastDataForCandleStick(data:StockData) {\r\n        let requiredCount = this.requiredCount;\r\n        if (data.close.length === requiredCount) {\r\n            return data;\r\n        } else {\r\n            let returnVal = {\r\n                open : [],\r\n                high : [],\r\n                low  : [],\r\n                close: []\r\n            } as StockData;\r\n            let i = 0;\r\n            let index = data.close.length - requiredCount;\r\n            while (i < requiredCount) {\r\n                returnVal.open.push(data.open[index + i]);\r\n                returnVal.high.push(data.high[index + i]);\r\n                returnVal.low.push(data.low[index + i]);\r\n                returnVal.close.push(data.close[index + i]);\r\n                i++;\r\n            }\r\n            return returnVal;\r\n        }\r\n    }\r\n\r\n    protected _generateDataForCandleStick(data:StockData) {\r\n            let requiredCount = this.requiredCount;\r\n            let generatedData = data.close.map(function(currentData, index) {\r\n                let i = 0;\r\n                let returnVal = {\r\n                    open : [],\r\n                    high : [],\r\n                    low  : [],\r\n                    close: []\r\n                } as StockData;\r\n                while(i < requiredCount) {\r\n                    returnVal.open.push(data.open[index + i]);\r\n                    returnVal.high.push(data.high[index + i]);\r\n                    returnVal.low.push(data.low[index + i]);\r\n                    returnVal.close.push(data.close[index + i]);\r\n                    i++;\r\n                }\r\n                return returnVal;\r\n            }).filter((val, index) => { return (index <= (data.close.length - requiredCount))  });\r\n            return generatedData;\r\n    }\r\n}"],"mappings":"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","ignoreList":[]}