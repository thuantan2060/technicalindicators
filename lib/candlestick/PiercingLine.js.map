{"version":3,"file":"PiercingLine.js","names":["_CandlestickFinder","_interopRequireDefault","require","PiercingLine","CandlestickFinder","constructor","scale","requiredCount","name","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","firstdaysMidpoint","isDowntrend","isFirstBearish","isSecondBullish","isPiercingLinePattern","exports","default","piercingline","hasPattern"],"sources":["../../src/candlestick/PiercingLine.ts"],"sourcesContent":["import StockData from '../StockData';\r\nimport CandlestickFinder from './CandlestickFinder';\r\n\r\nexport default class PiercingLine extends CandlestickFinder {\r\n    constructor(scale: number = 1) {\r\n        super();\r\n        this.requiredCount  = 2;\r\n        this.name = 'PiercingLine';\r\n        this.scale = scale;\r\n    }\r\n    logic (data:StockData) {\r\n        let firstdaysOpen   = data.open[0];\r\n        let firstdaysClose  = data.close[0];\r\n        let firstdaysHigh   = data.high[0];\r\n        let firstdaysLow    = data.low[0]\r\n        let seconddaysOpen  = data.open[1];\r\n        let seconddaysClose = data.close[1];\r\n        let seconddaysHigh  = data.high[1];\r\n        let seconddaysLow   = data.low[1]\r\n\r\n        let firstdaysMidpoint = ((firstdaysOpen+firstdaysClose)/2);\r\n        let isDowntrend       = seconddaysLow < firstdaysLow;\r\n        let isFirstBearish    = firstdaysClose < firstdaysOpen;\r\n        let isSecondBullish   = seconddaysClose > seconddaysOpen;\r\n\r\n        let isPiercingLinePattern = ((firstdaysLow > seconddaysOpen) && \r\n                                    (seconddaysClose > firstdaysMidpoint));\r\n        \r\n       return (isDowntrend && isFirstBearish && isPiercingLinePattern && isSecondBullish);\r\n        \r\n   }\r\n}\r\n\r\nexport function piercingline(data:StockData, scale: number = 1) {\r\n  return new PiercingLine(scale).hasPattern(data);\r\n}"],"mappings":";;;;;;;;AACA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEe,MAAMC,YAAY,SAASC,0BAAiB,CAAC;EACxDC,WAAWA,CAACC,KAAa,GAAG,CAAC,EAAE;IAC3B,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,aAAa,GAAI,CAAC;IACvB,IAAI,CAACC,IAAI,GAAG,cAAc;IAC1B,IAAI,CAACF,KAAK,GAAGA,KAAK;EACtB;EACAG,KAAKA,CAAEC,IAAc,EAAE;IACnB,IAAIC,aAAa,GAAKD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIC,cAAc,GAAIH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIC,aAAa,GAAKL,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIC,YAAY,GAAMP,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAC;IACjC,IAAIC,cAAc,GAAIT,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIO,cAAc,GAAIX,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIM,aAAa,GAAKZ,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAC;IAEjC,IAAIK,iBAAiB,GAAI,CAACZ,aAAa,GAACE,cAAc,IAAE,CAAE;IAC1D,IAAIW,WAAW,GAASF,aAAa,GAAGL,YAAY;IACpD,IAAIQ,cAAc,GAAMZ,cAAc,GAAGF,aAAa;IACtD,IAAIe,eAAe,GAAKN,eAAe,GAAGD,cAAc;IAExD,IAAIQ,qBAAqB,GAAKV,YAAY,GAAGE,cAAc,IAC9BC,eAAe,GAAGG,iBAAmB;IAEnE,OAAQC,WAAW,IAAIC,cAAc,IAAIE,qBAAqB,IAAID,eAAe;EAErF;AACH;AAACE,OAAA,CAAAC,OAAA,GAAA1B,YAAA;AAEM,SAAS2B,YAAYA,CAACpB,IAAc,EAAEJ,KAAa,GAAG,CAAC,EAAE;EAC9D,OAAO,IAAIH,YAAY,CAACG,KAAK,CAAC,CAACyB,UAAU,CAACrB,IAAI,CAAC;AACjD","ignoreList":[]}