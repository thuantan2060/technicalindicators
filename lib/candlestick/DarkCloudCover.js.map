{"version":3,"file":"DarkCloudCover.js","names":["_CandlestickFinder","_interopRequireDefault","require","DarkCloudCover","CandlestickFinder","constructor","scale","name","requiredCount","logic","data","firstdaysOpen","open","firstdaysClose","close","firstdaysHigh","high","firstdaysLow","low","seconddaysOpen","seconddaysClose","seconddaysHigh","seconddaysLow","firstdayMidpoint","isFirstBullish","isSecondBearish","isDarkCloudPattern","exports","default","darkcloudcover","hasPattern"],"sources":["../../src/candlestick/DarkCloudCover.ts"],"sourcesContent":["import StockData from '../StockData';\r\nimport CandlestickFinder from './CandlestickFinder';\r\n\r\nexport default class DarkCloudCover extends CandlestickFinder {\r\n    constructor(scale: number = 1) {\r\n        super();\r\n        this.name = 'DarkCloudCover';\r\n        this.requiredCount  = 2;\r\n        this.scale = scale;\r\n    }\r\n    logic (data:StockData) {\r\n        let firstdaysOpen   = data.open[0];\r\n        let firstdaysClose  = data.close[0];\r\n        let firstdaysHigh   = data.high[0];\r\n        let firstdaysLow    = data.low[0]\r\n        let seconddaysOpen  = data.open[1];\r\n        let seconddaysClose = data.close[1];\r\n        let seconddaysHigh  = data.high[1];\r\n        let seconddaysLow   = data.low[1]\r\n        \r\n        let firstdayMidpoint    = ((firstdaysClose+firstdaysOpen)/2);\r\n        let isFirstBullish      = firstdaysClose > firstdaysOpen;\r\n        let isSecondBearish     = seconddaysClose < seconddaysOpen;\r\n        let isDarkCloudPattern  = ((seconddaysOpen > firstdaysHigh) && \r\n                                  (seconddaysClose < firstdayMidpoint)&&\r\n                                  (seconddaysClose > firstdaysOpen));              \r\n   \r\n        return (isFirstBullish && isSecondBearish && isDarkCloudPattern);\r\n        \r\n   }\r\n}\r\n\r\nexport function darkcloudcover(data:StockData, scale: number = 1) {\r\n  return new DarkCloudCover(scale).hasPattern(data);\r\n}"],"mappings":";;;;;;;;AACA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEe,MAAMC,cAAc,SAASC,0BAAiB,CAAC;EAC1DC,WAAWA,CAACC,KAAa,GAAG,CAAC,EAAE;IAC3B,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,IAAI,GAAG,gBAAgB;IAC5B,IAAI,CAACC,aAAa,GAAI,CAAC;IACvB,IAAI,CAACF,KAAK,GAAGA,KAAK;EACtB;EACAG,KAAKA,CAAEC,IAAc,EAAE;IACnB,IAAIC,aAAa,GAAKD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIC,cAAc,GAAIH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIC,aAAa,GAAKL,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIC,YAAY,GAAMP,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAC;IACjC,IAAIC,cAAc,GAAIT,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIQ,eAAe,GAAGV,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIO,cAAc,GAAIX,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IAClC,IAAIM,aAAa,GAAKZ,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAC;IAEjC,IAAIK,gBAAgB,GAAO,CAACV,cAAc,GAACF,aAAa,IAAE,CAAE;IAC5D,IAAIa,cAAc,GAAQX,cAAc,GAAGF,aAAa;IACxD,IAAIc,eAAe,GAAOL,eAAe,GAAGD,cAAc;IAC1D,IAAIO,kBAAkB,GAAMP,cAAc,GAAGJ,aAAa,IAC/BK,eAAe,GAAGG,gBAAiB,IACnCH,eAAe,GAAGT,aAAe;IAE5D,OAAQa,cAAc,IAAIC,eAAe,IAAIC,kBAAkB;EAEpE;AACH;AAACC,OAAA,CAAAC,OAAA,GAAAzB,cAAA;AAEM,SAAS0B,cAAcA,CAACnB,IAAc,EAAEJ,KAAa,GAAG,CAAC,EAAE;EAChE,OAAO,IAAIH,cAAc,CAACG,KAAK,CAAC,CAACwB,UAAU,CAACpB,IAAI,CAAC;AACnD","ignoreList":[]}