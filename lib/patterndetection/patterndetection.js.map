{"version":3,"file":"patterndetection.js","names":["_indicator","require","isNodeEnvironment","model","oneHotMap","tf","Object","prototype","toString","call","global","process","e","PatternDetectorInput","IndicatorInput","constructor","values","exports","AvailablePatterns","interpolateArray","data","fitCount","linearInterpolate","before","after","atPoint","newData","Array","springFactor","Number","length","i","tmp","Math","floor","toFixed","ceil","l2Normalize","arr","sum","reduce","cum","value","norm","sqrt","map","v","PatternDetectorOutput","patternId","pattern","probability","modelLoaded","laodingModel","loadingPromise","loadModel","Promise","resolve","reject","console","log","tfnode","modelPath","__dirname","io","fileSystem","window","setTimeout","predictPattern","input","warn","Indicator","reverseInputs","output","predict","tensor2d","index","argMax","get","hasDoubleBottom","result","DB","hasDoubleTop","DT","hasHeadAndShoulder","HS","hasInverseHeadAndShoulder","IHS","isTrendingUp","TU","isTrendingDown","TD","PatternDetector"],"sources":["../../src/patterndetection/patterndetection.ts"],"sourcesContent":["import { Indicator, IndicatorInput } from '../indicator/indicator';\r\nimport { getConfig } from '../config';\r\n// import * as tf from '@tensorflow/tfjs';\r\n\r\nvar isNodeEnvironment = false;\r\n\r\nvar model;\r\nvar oneHotMap = ['IHS', 'TU', 'DB', 'HS', 'TD', 'DT'];\r\n\r\ndeclare var module;\r\ndeclare var __dirname;\r\ndeclare var global;\r\ndeclare var require;\r\nvar tf; \r\n\r\ntry {\r\n    isNodeEnvironment = Object.prototype.toString.call(global.process) === '[object process]' ;\r\n } catch(e) {}\r\n\r\nexport class PatternDetectorInput extends IndicatorInput {\r\n    constructor(public values:number[]) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport enum AvailablePatterns {\r\n    'IHS',\r\n    'TU',\r\n    'DB',\r\n    'HS',\r\n    'TD', \r\n    'DT'\r\n}\r\n\r\nfunction interpolateArray(data:any, fitCount:any):number[] {\r\n    var linearInterpolate = function (before:any, after:any, atPoint:any) {\r\n        return before + (after - before) * atPoint;\r\n    };\r\n\r\n    var newData = new Array();\r\n    var springFactor:any = new Number((data.length - 1) / (fitCount - 1));\r\n    newData[0] = data[0]; // for new allocation\r\n    for ( var i = 1; i < fitCount - 1; i++) {\r\n        var tmp = i * springFactor;\r\n        var before:any = new Number(Math.floor(tmp)).toFixed();\r\n        var after:any = new Number(Math.ceil(tmp)).toFixed();\r\n        var atPoint = tmp - before;\r\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n    }\r\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\r\n    return newData;\r\n};\r\n\r\nfunction l2Normalize(arr:any):number[] {\r\n    var sum = arr.reduce((cum:any, value:any)=> { return cum + (value * value) }, 0);\r\n    var norm = Math.sqrt(sum);\r\n    return arr.map((v:any)=>v/norm);\r\n}\r\n\r\nexport class PatternDetectorOutput {\r\n    patternId: AvailablePatterns\r\n    pattern : string\r\n    probability : number\r\n}\r\n\r\nvar modelLoaded = false;\r\nvar laodingModel = false;\r\nvar loadingPromise;\r\n\r\nasync function loadModel() {\r\n    if(modelLoaded) return Promise.resolve(true);\r\n    if(laodingModel) return loadingPromise;\r\n    laodingModel = true;\r\n    loadingPromise = new Promise<void>(async function(resolve, reject) {\r\n        if(isNodeEnvironment) {\r\n            tf = require('@tensorflow/tfjs')\r\n            console.log('Nodejs Environment detected ');\r\n            var tfnode = require('@tensorflow/tfjs-node');\r\n            var modelPath = require('path').resolve(__dirname, '../tf_model/model.json');\r\n            model = await tf.loadModel(tfnode.io.fileSystem(modelPath));\r\n        } else {\r\n            if(typeof (window as any).tf == \"undefined\") {\r\n                modelLoaded = false;\r\n                laodingModel = false;\r\n                console.log('Tensorflow js not imported, pattern detection may not work');\r\n                resolve();\r\n                return;\r\n            }\r\n            tf = (window as any).tf;\r\n            console.log('Browser Environment detected ', tf);\r\n            console.log('Loading model ....')\r\n            model = await tf.loadModel('/tf_model/model.json');\r\n            modelLoaded = true;\r\n            laodingModel = false;\r\n            setTimeout(resolve, 1000);\r\n            console.log('Loaded model');\r\n            return;\r\n        }\r\n        modelLoaded = true;\r\n        laodingModel = false;\r\n        resolve();\r\n        return;\r\n    });\r\n    await loadingPromise;\r\n    return;\r\n }\r\n\r\nloadModel();\r\n\r\nexport async function predictPattern(input:PatternDetectorInput):Promise<PatternDetectorOutput> {\r\n    await loadModel()\r\n    if(input.values.length < 300) {\r\n        console.warn('Pattern detector requires atleast 300 data points for a reliable prediction, received just ', input.values.length)\r\n    }\r\n    Indicator.reverseInputs(input);\r\n    var values = input.values;\r\n    var output = await model.predict(tf.tensor2d([l2Normalize(interpolateArray(values, 400))]));\r\n    var index = tf.argMax(output, 1).get(0);\r\n    Indicator.reverseInputs(input);\r\n    return { patternId : index, pattern : oneHotMap[index], probability : output.get(0,4) * 100}\r\n}\r\n\r\nexport async function hasDoubleBottom(input:PatternDetectorInput):Promise<Boolean> {\r\n    var result = await predictPattern(input)\r\n    return (result.patternId === AvailablePatterns.DB)\r\n}\r\n\r\nexport async function hasDoubleTop(input:PatternDetectorInput):Promise<Boolean> {\r\n    var result = await predictPattern(input)\r\n    return (result.patternId === AvailablePatterns.DT)\r\n}\r\n\r\nexport async function hasHeadAndShoulder(input:PatternDetectorInput):Promise<Boolean> {\r\n    var result = await predictPattern(input)\r\n    return (result.patternId === AvailablePatterns.HS)\r\n}\r\n\r\nexport async function hasInverseHeadAndShoulder(input:PatternDetectorInput):Promise<Boolean> {\r\n    var result = await predictPattern(input)\r\n    return (result.patternId === AvailablePatterns.IHS)\r\n}\r\n\r\nexport async function isTrendingUp(input:PatternDetectorInput):Promise<Boolean> {\r\n    var result = await predictPattern(input)\r\n    return (result.patternId === AvailablePatterns.TU)\r\n}\r\n\r\nexport async function isTrendingDown(input:PatternDetectorInput):Promise<Boolean> {\r\n    var result = await predictPattern(input)\r\n    return (result.patternId === AvailablePatterns.TD)\r\n}\r\n\r\nexport class PatternDetector extends Indicator {\r\n    static predictPattern = predictPattern;\r\n    static hasDoubleBottom = hasDoubleBottom;\r\n    static hasDoubleTop = hasDoubleTop;\r\n    static hasHeadAndShoulder = hasHeadAndShoulder;\r\n    static hasInverseHeadAndShoulder = hasInverseHeadAndShoulder;\r\n    static isTrendingUp = isTrendingUp;\r\n    static isTrendingDown = isTrendingDown;\r\n}"],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEA;;AAEA,IAAIC,iBAAiB,GAAG,KAAK;AAE7B,IAAIC,KAAK;AACT,IAAIC,SAAS,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAMrD,IAAIC,EAAE;AAEN,IAAI;EACAH,iBAAiB,GAAGI,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,KAAK,kBAAkB;AAC5F,CAAC,CAAC,OAAMC,CAAC,EAAE,CAAC;AAEN,MAAMC,oBAAoB,SAASC,yBAAc,CAAC;EACrDC,WAAWA,CAAQC,MAAe,EAAE;IAChC,KAAK,CAAC,CAAC;IAAC,KADOA,MAAe,GAAfA,MAAe;EAElC;AACJ;AAACC,OAAA,CAAAJ,oBAAA,GAAAA,oBAAA;AAAA,IAEWK,iBAAiB,GAAAD,OAAA,CAAAC,iBAAA,0BAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;AAS7B,SAASC,gBAAgBA,CAACC,IAAQ,EAAEC,QAAY,EAAW;EACvD,IAAIC,iBAAiB,GAAG,SAAAA,CAAUC,MAAU,EAAEC,KAAS,EAAEC,OAAW,EAAE;IAClE,OAAOF,MAAM,GAAG,CAACC,KAAK,GAAGD,MAAM,IAAIE,OAAO;EAC9C,CAAC;EAED,IAAIC,OAAO,GAAG,IAAIC,KAAK,CAAC,CAAC;EACzB,IAAIC,YAAgB,GAAG,IAAIC,MAAM,CAAC,CAACT,IAAI,CAACU,MAAM,GAAG,CAAC,KAAKT,QAAQ,GAAG,CAAC,CAAC,CAAC;EACrEK,OAAO,CAAC,CAAC,CAAC,GAAGN,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,KAAM,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,QAAQ,GAAG,CAAC,EAAEU,CAAC,EAAE,EAAE;IACpC,IAAIC,GAAG,GAAGD,CAAC,GAAGH,YAAY;IAC1B,IAAIL,MAAU,GAAG,IAAIM,MAAM,CAACI,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;IACtD,IAAIX,KAAS,GAAG,IAAIK,MAAM,CAACI,IAAI,CAACG,IAAI,CAACJ,GAAG,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;IACpD,IAAIV,OAAO,GAAGO,GAAG,GAAGT,MAAM;IAC1BG,OAAO,CAACK,CAAC,CAAC,GAAGT,iBAAiB,CAACF,IAAI,CAACG,MAAM,CAAC,EAAEH,IAAI,CAACI,KAAK,CAAC,EAAEC,OAAO,CAAC;EACtE;EACAC,OAAO,CAACL,QAAQ,GAAG,CAAC,CAAC,GAAGD,IAAI,CAACA,IAAI,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/C,OAAOJ,OAAO;AAClB;AAAC;AAED,SAASW,WAAWA,CAACC,GAAO,EAAW;EACnC,IAAIC,GAAG,GAAGD,GAAG,CAACE,MAAM,CAAC,CAACC,GAAO,EAAEC,KAAS,KAAI;IAAE,OAAOD,GAAG,GAAIC,KAAK,GAAGA,KAAM;EAAC,CAAC,EAAE,CAAC,CAAC;EAChF,IAAIC,IAAI,GAAGV,IAAI,CAACW,IAAI,CAACL,GAAG,CAAC;EACzB,OAAOD,GAAG,CAACO,GAAG,CAAEC,CAAK,IAAGA,CAAC,GAACH,IAAI,CAAC;AACnC;AAEO,MAAMI,qBAAqB,CAAC;EAC/BC,SAAS;EACTC,OAAO;EACPC,WAAW;AACf;AAACjC,OAAA,CAAA8B,qBAAA,GAAAA,qBAAA;AAED,IAAII,WAAW,GAAG,KAAK;AACvB,IAAIC,YAAY,GAAG,KAAK;AACxB,IAAIC,cAAc;AAElB,eAAeC,SAASA,CAAA,EAAG;EACvB,IAAGH,WAAW,EAAE,OAAOI,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;EAC5C,IAAGJ,YAAY,EAAE,OAAOC,cAAc;EACtCD,YAAY,GAAG,IAAI;EACnBC,cAAc,GAAG,IAAIE,OAAO,CAAO,gBAAeC,OAAO,EAAEC,MAAM,EAAE;IAC/D,IAAGvD,iBAAiB,EAAE;MAClBG,EAAE,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;MAChCyD,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,IAAIC,MAAM,GAAG3D,OAAO,CAAC,uBAAuB,CAAC;MAC7C,IAAI4D,SAAS,GAAG5D,OAAO,CAAC,MAAM,CAAC,CAACuD,OAAO,CAACM,SAAS,EAAE,wBAAwB,CAAC;MAC5E3D,KAAK,GAAG,MAAME,EAAE,CAACiD,SAAS,CAACM,MAAM,CAACG,EAAE,CAACC,UAAU,CAACH,SAAS,CAAC,CAAC;IAC/D,CAAC,MAAM;MACH,IAAG,OAAQI,MAAM,CAAS5D,EAAE,IAAI,WAAW,EAAE;QACzC8C,WAAW,GAAG,KAAK;QACnBC,YAAY,GAAG,KAAK;QACpBM,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC;QACzEH,OAAO,CAAC,CAAC;QACT;MACJ;MACAnD,EAAE,GAAI4D,MAAM,CAAS5D,EAAE;MACvBqD,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEtD,EAAE,CAAC;MAChDqD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCxD,KAAK,GAAG,MAAME,EAAE,CAACiD,SAAS,CAAC,sBAAsB,CAAC;MAClDH,WAAW,GAAG,IAAI;MAClBC,YAAY,GAAG,KAAK;MACpBc,UAAU,CAACV,OAAO,EAAE,IAAI,CAAC;MACzBE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B;IACJ;IACAR,WAAW,GAAG,IAAI;IAClBC,YAAY,GAAG,KAAK;IACpBI,OAAO,CAAC,CAAC;IACT;EACJ,CAAC,CAAC;EACF,MAAMH,cAAc;EACpB;AACH;AAEDC,SAAS,CAAC,CAAC;AAEJ,eAAea,cAAcA,CAACC,KAA0B,EAAiC;EAC5F,MAAMd,SAAS,CAAC,CAAC;EACjB,IAAGc,KAAK,CAACpD,MAAM,CAACc,MAAM,GAAG,GAAG,EAAE;IAC1B4B,OAAO,CAACW,IAAI,CAAC,6FAA6F,EAAED,KAAK,CAACpD,MAAM,CAACc,MAAM,CAAC;EACpI;EACAwC,oBAAS,CAACC,aAAa,CAACH,KAAK,CAAC;EAC9B,IAAIpD,MAAM,GAAGoD,KAAK,CAACpD,MAAM;EACzB,IAAIwD,MAAM,GAAG,MAAMrE,KAAK,CAACsE,OAAO,CAACpE,EAAE,CAACqE,QAAQ,CAAC,CAACrC,WAAW,CAAClB,gBAAgB,CAACH,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3F,IAAI2D,KAAK,GAAGtE,EAAE,CAACuE,MAAM,CAACJ,MAAM,EAAE,CAAC,CAAC,CAACK,GAAG,CAAC,CAAC,CAAC;EACvCP,oBAAS,CAACC,aAAa,CAACH,KAAK,CAAC;EAC9B,OAAO;IAAEpB,SAAS,EAAG2B,KAAK;IAAE1B,OAAO,EAAG7C,SAAS,CAACuE,KAAK,CAAC;IAAEzB,WAAW,EAAGsB,MAAM,CAACK,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG;EAAG,CAAC;AAChG;AAEO,eAAeC,eAAeA,CAACV,KAA0B,EAAmB;EAC/E,IAAIW,MAAM,GAAG,MAAMZ,cAAc,CAACC,KAAK,CAAC;EACxC,OAAQW,MAAM,CAAC/B,SAAS,KAAK9B,iBAAiB,CAAC8D,EAAE;AACrD;AAEO,eAAeC,YAAYA,CAACb,KAA0B,EAAmB;EAC5E,IAAIW,MAAM,GAAG,MAAMZ,cAAc,CAACC,KAAK,CAAC;EACxC,OAAQW,MAAM,CAAC/B,SAAS,KAAK9B,iBAAiB,CAACgE,EAAE;AACrD;AAEO,eAAeC,kBAAkBA,CAACf,KAA0B,EAAmB;EAClF,IAAIW,MAAM,GAAG,MAAMZ,cAAc,CAACC,KAAK,CAAC;EACxC,OAAQW,MAAM,CAAC/B,SAAS,KAAK9B,iBAAiB,CAACkE,EAAE;AACrD;AAEO,eAAeC,yBAAyBA,CAACjB,KAA0B,EAAmB;EACzF,IAAIW,MAAM,GAAG,MAAMZ,cAAc,CAACC,KAAK,CAAC;EACxC,OAAQW,MAAM,CAAC/B,SAAS,KAAK9B,iBAAiB,CAACoE,GAAG;AACtD;AAEO,eAAeC,YAAYA,CAACnB,KAA0B,EAAmB;EAC5E,IAAIW,MAAM,GAAG,MAAMZ,cAAc,CAACC,KAAK,CAAC;EACxC,OAAQW,MAAM,CAAC/B,SAAS,KAAK9B,iBAAiB,CAACsE,EAAE;AACrD;AAEO,eAAeC,cAAcA,CAACrB,KAA0B,EAAmB;EAC9E,IAAIW,MAAM,GAAG,MAAMZ,cAAc,CAACC,KAAK,CAAC;EACxC,OAAQW,MAAM,CAAC/B,SAAS,KAAK9B,iBAAiB,CAACwE,EAAE;AACrD;AAEO,MAAMC,eAAe,SAASrB,oBAAS,CAAC;EAC3C,OAAOH,cAAc,GAAGA,cAAc;EACtC,OAAOW,eAAe,GAAGA,eAAe;EACxC,OAAOG,YAAY,GAAGA,YAAY;EAClC,OAAOE,kBAAkB,GAAGA,kBAAkB;EAC9C,OAAOE,yBAAyB,GAAGA,yBAAyB;EAC5D,OAAOE,YAAY,GAAGA,YAAY;EAClC,OAAOE,cAAc,GAAGA,cAAc;AAC1C;AAACxE,OAAA,CAAA0E,eAAA,GAAAA,eAAA","ignoreList":[]}