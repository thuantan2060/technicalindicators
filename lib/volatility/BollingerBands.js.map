{"version":3,"file":"BollingerBands.js","names":["Object","defineProperty","exports","value","BollingerBandsOutput","BollingerBandsInput","BollingerBands","bollingerbands","_indicator","require","_SMA","_SD","IndicatorInput","period","stdDev","values","middle","upper","lower","pb","Indicator","generator","constructor","input","priceArray","format","sma","sd","result","SMA","v","SD","tick","calcSMA","calcsd","nextValue","next","forEach","undefined","push","calculate","price","reverseInputs","reversedInput","reverse"],"sources":["../../src/volatility/BollingerBands.ts"],"sourcesContent":["\"use strict\"\r\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\r\nimport { SMA }  from '../moving_averages/SMA';\r\nimport { SD } from '../Utils/SD';\r\nexport class BollingerBandsInput extends IndicatorInput {\r\n    period : number;\r\n    stdDev : number;\r\n    values : number[];\r\n};\r\n\r\nexport class BollingerBandsOutput extends IndicatorInput {\r\n    middle : number;\r\n    upper : number;\r\n    lower :number;\r\n    pb:number;\r\n};\r\n\r\nexport class BollingerBands extends Indicator {\r\n    generator:IterableIterator<BollingerBandsOutput | undefined>;\r\n    constructor(input:BollingerBandsInput) {\r\n        super(input);\r\n        var period = input.period\r\n        var priceArray = input.values;\r\n        var stdDev     = input.stdDev;\r\n        var format     = this.format;\r\n\r\n        var sma,sd;\r\n\r\n        this.result = [];\r\n\r\n        sma = new SMA({period : period, values :[], format : (v) => {return v}});\r\n        sd  = new SD({period : period, values : [], format : (v) => {return v}});\r\n\r\n        this.generator = (function* (){\r\n            var result;\r\n            var tick;\r\n            var calcSMA;\r\n            var calcsd;\r\n            tick = yield;\r\n            while (true) {\r\n                calcSMA = sma.nextValue(tick);\r\n                calcsd  = sd.nextValue(tick);\r\n                if(calcSMA){\r\n                    let middle = format(calcSMA);\r\n                    let upper = format(calcSMA + (calcsd * stdDev));\r\n                    let lower = format(calcSMA - (calcsd * stdDev));\r\n                    let pb:number = format((tick - lower) / (upper - lower));\r\n                    result = {\r\n                        middle : middle,\r\n                        upper  : upper,\r\n                        lower  : lower,\r\n                        pb     : pb\r\n                    }\r\n                }\r\n                tick = yield result;\r\n            }\r\n        })();\r\n\r\n        this.generator.next();\r\n\r\n        priceArray.forEach((tick) => {\r\n            var result = this.generator.next(tick);\r\n            if(result.value != undefined){\r\n                this.result.push(result.value);\r\n            }\r\n        });\r\n    }\r\n\r\n    static calculate = bollingerbands;\r\n\r\n    nextValue(price:number):BollingerBandsOutput | undefined {\r\n        return this.generator.next(price).value;\r\n    };\r\n}\r\n\r\nexport function bollingerbands(input:BollingerBandsInput):BollingerBandsOutput[] {\r\n       Indicator.reverseInputs(input);\r\n        var result = new BollingerBands(input).result;\r\n        if(input.reversedInput) {\r\n            result.reverse();\r\n        }\r\n        Indicator.reverseInputs(input);\r\n        return result;\r\n    };\r\n"],"mappings":"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","ignoreList":[]}