{"version":3,"file":"CCI.js","names":["_indicator","require","_SMA","_FixedSizeLinkedList","_interopRequireDefault","CCIInput","IndicatorInput","high","low","close","period","exports","CCI","Indicator","result","generator","constructor","input","lows","highs","closes","format","constant","currentTpSet","LinkedList","tpSMACalculator","SMA","values","v","length","tick","tp","push","smaTp","nextValue","meanDeviation","cci","sum","undefined","x","iterator","Math","abs","next","forEach","index","value","calculate","price","reverseInputs","reversedInput","reverse"],"sources":["../../src/oscillators/CCI.ts"],"sourcesContent":["import { CandleData } from '../StockData';\r\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\r\nimport { SMA } from       '../moving_averages/SMA';\r\nimport LinkedList from '../Utils/FixedSizeLinkedList';\r\n\r\nexport class CCIInput extends IndicatorInput {\r\n  high : number[];\r\n  low :number[];\r\n  close : number[];\r\n  period : number;\r\n};\r\n\r\n\r\nexport class CCI extends Indicator {\r\n  result : number[]\r\n  generator:IterableIterator<number | undefined>;;\r\n  constructor(input:CCIInput) {\r\n    super(input);\r\n    var lows = input.low;\r\n    var highs = input.high;\r\n    var closes = input.close;\r\n    var period = input.period;\r\n    var format = this.format;\r\n    let constant = .015;\r\n    var currentTpSet = new LinkedList(period);;\r\n    \r\n    var tpSMACalculator  = new SMA({period: period, values:[], format : (v) => {return v}});\r\n\r\n    if(!((lows.length === highs.length) && (highs.length === closes.length) )){\r\n      throw ('Inputs(low,high, close) not of equal size');\r\n    }\r\n\r\n    this.result = [];\r\n\r\n    this.generator = (function* (){\r\n      var tick = yield;\r\n      while (true) {\r\n        let tp = (tick.high + tick.low + tick.close)/3\r\n        currentTpSet.push(tp);\r\n        let smaTp = tpSMACalculator.nextValue(tp);\r\n        let meanDeviation:number = null;\r\n        let cci:number;\r\n        let sum = 0;\r\n        if(smaTp != undefined) {\r\n          //First, subtract the most recent 20-period average of the typical price from each period's typical price. \r\n          //Second, take the absolute values of these numbers.\r\n          //Third,sum the absolute values. \r\n          for(let x of currentTpSet.iterator()){\r\n            sum = sum + (Math.abs(x - smaTp))\r\n          }\r\n          //Fourth, divide by the total number of periods (20). \r\n          meanDeviation = sum / period\r\n          cci = (tp  -  smaTp) / (constant * meanDeviation)\r\n        }\r\n        tick = yield cci;\r\n      }\r\n    })();\r\n\r\n    this.generator.next();\r\n\r\n    lows.forEach((tick,index) => {\r\n      var result = this.generator.next({\r\n        high : highs[index],\r\n        low  : lows[index],\r\n        close : closes[index]\r\n      });\r\n      if(result.value != undefined){\r\n        this.result.push(result.value);\r\n      }\r\n    });\r\n  };\r\n\r\n  static calculate = cci;\r\n\r\n  nextValue(price:CandleData):number | undefined {\r\n      let result = this.generator.next(price).value;\r\n      if(result != undefined) {\r\n        return result;\r\n      }\r\n  };\r\n}\r\n\r\nexport function cci(input:CCIInput):number[] {\r\n    Indicator.reverseInputs(input);\r\n    var result = new CCI(input).result;\r\n    if(input.reversedInput) {\r\n        result.reverse();\r\n    }\r\n    Indicator.reverseInputs(input);\r\n    return result;\r\n  };"],"mappings":"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","ignoreList":[]}